@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Elasticsearch ve Entityframework ile yapılmış Örnek Proje</h1>
    <p class="lead">Elasticsearch ile ilgili setup dosyasını buradan indirip kurabilirsiniz <a target="_blank" href="http://ruilopes.com/elasticsearch-setup/ ">Elasticsearch Setup</a> </p>
    <p>
        setup.exe kurulduktan sonra, Windows'un servisler kısmına, "Windows+R" ile run command satırını açıp, "services.msc" komutunu yazıp ulaşabilirsiniz.
        Bundan sonra aşağıdaki url ile Elasticsearch Servisini startlayıp ve
        <a target="_blank" href="http://localhost:9200/">http://localhost:9200</a> ile test edebilirsiniz.
    </p>
    <p>Ekran görüntüsü bu şekilde olacaktır.</p>
    <pre><code>
    {
    "name" : "aV0rXdK",
    "cluster_name" : "elasticsearch",
    "cluster_uuid" : "MVjT7pG4TNqsq-ImqgR0kA",
    "version" : {
    "number" : "6.3.2",
    "build_flavor" : "oss",
    "build_type" : "zip",
    "build_hash" : "053779d",
    "build_date" : "2018-07-20T05:20:23.451332Z",
    "build_snapshot" : false,
    "lucene_version" : "7.3.1",
    "minimum_wire_compatibility_version" : "5.6.0",
    "minimum_index_compatibility_version" : "5.0.0"
    },
    "tagline" : "You Know, for Search"
    }
</code></pre>

    <p class="alert alert-danger">Gerekli migration ve web configdeki connectionstring ayarlarını düzeltmeyi unutmayınız!</p>
    <p>
        Şuan 2 tablo ile çalıştığım için 2 adet metod ile oluşmuş veritabanlarını sildirmeyi birer buttona entegre ettim. ama siz sıfırdan açacağınız için veritabanlarını silmenize gerek yok.
    </p>
    <p>Oluşacak veritabanlarının isimleri movies ve genres olacak. Bunların isimlerini öncelikle ElasticsearchHelper classından daha sonra da controllerlardan değiştirmelisiniz.</p>
    <form action="/movie/DeleteIndex" method="post">
        <input type="submit" value="Film Veritabanını Sil" />
    </form>
    <form action="/genre/DeleteIndex" method="post">
        <input type="submit" value="Genre Veritabanını Sil" />
    </form>

    <h3>ElasticsearchHelper classının içinde neler var?</h3>
    <ul>
        <li>
            EsClient metodunun içinde connection string var. Yeni bir veritabanı oluştururken her zaman ihtiyaç duyacağınız metodumuz.

            <pre><code>
    public static ElasticClient EsClient()
    {


        node = new Uri("http://localhost:9200/");
        connSettings = new ConnectionSettings(node);

        client = new ElasticClient(connSettings);

        return client;
    }
</code></pre>
        </li>
        <li>
            Veritabanı silme metodu

            <pre><code>
    public static IDeleteIndexResponse DeleteIndex(string indexName)
    {
        return EsClient().DeleteIndex(indexName);
    }
</code></pre>
        </li>
        <li>
            CreateMovieIndex ve CreateGenreIndex ile veritabanı oluşturma metodları

            <pre><code>
    public static void CreateMovieIndex()
    {
        string indexName = "movies";
        string aliasName = "my_movie";

        var indexSettings = new IndexSettings();
        indexSettings.NumberOfReplicas = 1;
        indexSettings.NumberOfShards = 3;
        var createIndexDescriptor = new CreateIndexDescriptor(indexName)
        .Mappings(ms => ms.Map<Movie>
            (m => m.AutoMap()))
            .InitializeUsing(new IndexState() { Settings = indexSettings })
            .Aliases(a => a.Alias(aliasName));

            ElasticsearchHelper.EsClient().CreateIndex(createIndexDescriptor);
        }
</code></pre>

            <pre><code>
    public static void CreateGenreIndex()
    {
        string indexName = "genres";
        string aliasName = "my_genre";

        var indexSettings = new IndexSettings();
        indexSettings.NumberOfReplicas = 1;
        indexSettings.NumberOfShards = 3;
        var createIndexDescriptor = new CreateIndexDescriptor(indexName)
        .Mappings(ms => ms.Map<Genre>
            (m => m.AutoMap()))
            .InitializeUsing(new IndexState() { Settings = indexSettings })
            .Aliases(a => a.Alias(aliasName));

            ElasticsearchHelper.EsClient().CreateIndex(createIndexDescriptor);
        }
</code></pre>
        </li>

    </ul>

    <h3>
        Movie ve Genre controllerları içinde entityframeworkün standart metdolarını barındırıyor.
    </h3>
    <p>
        Veritabanındaki verinin listesini getirme

        <pre><code>
   var response = ElasticsearchHelper.EsClient().Search(movie)(s => s
    .Index("movies")
    .Type("movie")
    .From(0).Size(1000)
    .Source(a => a.IncludeAll())
    .Query(a => a.MatchAll())
    )  
</code></pre>

    </p>

    <p>
        Veritabanındaki veriyi edit etme

        <pre><code>
    var response = ElasticsearchHelper.EsClient().Update(Movie, Movie)
        (movie.Id, d => d
        .Index("movies")
        .Type("movie")
        .Doc(new Movie
        {
        Id = movie.Id,
        Title = movie.Title,
        Description = movie.Description,
        GenreId = movie.GenreId,
        CreatedDate = DateTime.Now

        }));
</code></pre>

    </p>

    <p>
        Veritabanına veri insert etme

        <pre><code>
    ElasticsearchHelper.EsClient().Index(Movie)
        (movie,
        id => id.Index("movies")
        .Type(TypeName.From(Movie)
            ())
            .Id(movie.Id)
            .Refresh(Elasticsearch.Net.Refresh.True));
</code></pre>

    </p>

    <p>
        Veritabanından veri silme

        <pre><code>
    var response = ElasticsearchHelper.EsClient().Delete(Movie)
        (id, d => d
        .Index("movies")
        .Type("movie"));
</code></pre>

    </p>


    <p>Aynı mantık genre içinde geçerli. Search şuan bir tek movie controllerda var bilginiz olsun.</p>
</div>

